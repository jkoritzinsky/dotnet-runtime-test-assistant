{
	"name": "dotnet-runtime-test-assistant",
	"displayName": "dotnet/runtime Test Assistant",
	"description": "VSCode extension to assist in running tests in the dotnet/runtime GitHub repository from within VSCode with a debugger attached.",
	"repository": {
		"type": "git",
		"url": "https://github.com/jkoritzinsky/dotnet-runtime-test-assistant"
	},
	"author": {
		"name": "Jeremy Koritzinsky",
		"url": "https://github.com/jkoritzinsky"
	},
	"publisher": "jkoritzinsky",
	"version": "0.0.2",
	"engines": {
		"vscode": "^1.63.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:dotnet-runtime-test-assistant.startServerIfNotStarted",
		"onCommand:dotnet-runtime-test-assistant.shutdownServer",
		"onCommand:dotnet-runtime-test-assistant.importSettingsFromDevContainer",
		"onCommand:dotnet-runtime-test-assistant.configureRunSettingsFileForTestRun",
		"onCommand:dotnet-runtime-test-assistant.getSubsetsToBuild",
		"onDebugResolve:rt-runtimetest",
		"onDebugDynamicConfigurations:rt-runtimetest",
		"onDebugResolve:rt-cg2corelib",
		"onDebugDynamicConfigurations:rt-cg2corelib",
		"onDebugResolve:rt-cg2rt",
		"onDebugDynamicConfigurations:rt-cg2rt",
		"onDebugResolve:rt-libsnative",
		"onDebugDynamicConfigurations:rt-libsnative",
		"onDebugResolve:rt-ilc",
		"onDebugDynamicConfigurations:rt-ilc",
		"onTaskType:runtime-build"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "dotnet-runtime-test-assistant.startServerIfNotStarted",
				"title": "DN/RT-Test: Start the assistant server"
			},
			{
				"command": "dotnet-runtime-test-assistant.shutdownServer",
				"title": "DN/RT-Test: Stop the assistant server"
			},
			{
				"command": "dotnet-runtime-test-assistant.importSettingsFromDevContainer",
				"title": "DN/RT-Test: Import settings from .devcontainer file"
			},
			{
				"command": "dotnet-runtime-test-assistant.configureRunSettingsFileForTestRun",
				"title": "DN/RT-Test: Configure the .runsettings file for running tests in VSCode"
			},
			{
				"command": "dotnet-runtime-test-assistant.getSubsetsToBuild",
				"title": "DN/RT-Test: Get subsets to build"
			}
		],
		"debuggers": [
			{
				"type": "rt-runtimetest",
				"label": "Debug runtime test",
				"configurationAttributes": {
					"launch": {
						"properties": {
							"dotenvPath": {
								"type": "string",
								"description": "A path to a .env file"
							},
							"args": {
								"description": "Program arguments.",
								"type": "array",
								"items": {
									"type": "string"
								},
								"default": []
							},
							"env": {
								"type": "object",
								"additionalProperties": {
									"type": "string"
								},
								"description": "Environment variables to set for the target process"
							},
							"cwd": {
								"type": "string",
								"description": "The working directory for the target process"
							},
							"stopAtEntry": {
								"type": "boolean",
								"description": "true if the debugger should break as soon as the process is started."
							}
						}
					}
				},
				"configurationSnippets": [
					{
						"label": "DN/RT-Assistant: Launch Runtime Test",
						"description": "A new configuration for running a runtime test.",
						"body": {
							"name": "Launch Runtime Test",
							"type": "rt-runtimetest",
							"request": "launch"
						}
					}
				]
			},
			{
				"type": "rt-cg2corelib",
				"label": "Debug running Crossgen2 on System.Private.CoreLib",
				"configurationAttributes": {
					"launch": {
						"properties": {
							"separateConfig": {
								"type": "boolean",
								"description": "Run crossgen2 against a System.Private.CoreLib of a different configuration."
							},
							"args": {
								"description": "Program arguments.",
								"type": "array",
								"items": {
									"type": "string"
								},
								"default": []
							},
							"env": {
								"type": "object",
								"additionalProperties": {
									"type": "string"
								},
								"description": "Environment variables to set for the target process"
							},
							"cwd": {
								"type": "string",
								"description": "The working directory for the target process"
							},
							"stopAtEntry": {
								"type": "boolean",
								"description": "true if the debugger should break as soon as the process is started."
							}
						}
					}
				},
				"configurationSnippets": [
					{
						"label": "DN/RT-Assistant: Launch Crossgen2 against System.Private.CoreLib",
						"description": "A new configuration for running crossgen2 to generate native code for System.Private.CoreLib.",
						"body": {
							"name": "Launch Crossgen2 against System.Private.CoreLib",
							"type": "rt-cg2corelib",
							"request": "launch"
						}
					}
				]
			},
			{
				"type": "rt-cg2rt",
				"label": "Debug running Crossgen2 on a runtime test",
				"configurationAttributes": {
					"launch": {
						"properties": {
							"separateConfig": {
								"type": "boolean",
								"description": "Run crossgen2 against a runtime test of a different configuration."
							},
							"composite": {
								"type": "boolean",
								"description": "Run crossgen2 in composite mode."
							},
							"selectReferencedAssembly": {
								"type": "boolean",
								"description": "Run crossgen2 against an assembly referenced by the runtime test or the runtime test, not only the runtime test itself."
							},
							"args": {
								"description": "Program arguments.",
								"type": "array",
								"items": {
									"type": "string"
								},
								"default": []
							},
							"env": {
								"type": "object",
								"additionalProperties": {
									"type": "string"
								},
								"description": "Environment variables to set for the target process"
							},
							"cwd": {
								"type": "string",
								"description": "The working directory for the target process"
							},
							"stopAtEntry": {
								"type": "boolean",
								"description": "true if the debugger should break as soon as the process is started."
							}
						}
					}
				},
				"configurationSnippets": [
					{
						"label": "DN/RT-Assistant: Launch Crossgen2 against a runtime test",
						"description": "A new configuration for running crossgen2 to generate native code for a runtime test.",
						"body": {
							"name": "Launch Crossgen2 against a runtime test",
							"type": "rt-cg2rt",
							"request": "launch"
						}
					}
				]
			},
			{
				"type": "rt-ilc",
				"label": "Debug running ILC on a runtime test",
				"configurationAttributes": {
					"launch": {
						"properties": {
							"args": {
								"description": "Program arguments.",
								"type": "array",
								"items": {
									"type": "string"
								},
								"default": []
							},
							"env": {
								"type": "object",
								"additionalProperties": {
									"type": "string"
								},
								"description": "Environment variables to set for the target process"
							},
							"cwd": {
								"type": "string",
								"description": "The working directory for the target process"
							},
							"stopAtEntry": {
								"type": "boolean",
								"description": "true if the debugger should break as soon as the process is started."
							}
						}
					}
				},
				"configurationSnippets": [
					{
						"label": "DN/RT-Assistant: Launch ILC against a runtime test",
						"description": "A new configuration for running ILC to generate native code for a runtime test.",
						"body": {
							"name": "Launch ILC against a runtime test",
							"type": "rt-ilc",
							"request": "launch"
						}
					}
				]
			},
			{
				"type": "rt-libsnative",
				"label": "Debug Libraries Test with Native Debugger",
				"configurationAttributes": {
					"launch": {
						"properties": {
							"outerloop": {
								"type": "boolean",
								"description": "Run outerloop tests",
								"default": false
							},
							"args": {
								"description": "Program arguments.",
								"type": "array",
								"items": {
									"type": "string"
								},
								"default": []
							},
							"env": {
								"type": "object",
								"additionalProperties": {
									"type": "string"
								},
								"description": "Environment variables to set for the target process"
							},
							"cwd": {
								"type": "string",
								"description": "The working directory for the target process"
							},
							"stopAtEntry": {
								"type": "boolean",
								"description": "true if the debugger should break as soon as the process is started."
							}
						}
					}
				},
				"configurationSnippets": [
					{
						"label": "DN/RT-Assistant: Launch Libraries Test With Native Debugger",
						"description": "A new configuration for running a libraries test with a native debugger.",
						"body": {
							"name": "Launch Libraries Test with Native Debugger",
							"type": "rt-libsnative",
							"request": "launch"
						}
					}
				]
			}
		],
		"taskDefinitions": [
			{
				"type": "runtime-build",
				"properties": {
					"subsets": {
						"type": "string",
						"pattern": "(\\+?([A-Za-z.]+)(\\+([A-Za-z.]+))*\\+?|)",
						"description": "Subsets to build"
					},
					"configuration": {
						"type": "string",
						"enum": [
							"Debug",
							"Checked",
							"Release"
						]
					},
					"runtimeConfiguration": {
						"type": "string",
						"enum": [
							"Debug",
							"Checked",
							"Release"
						]
					},
					"librariesConfiguration": {
						"type": "string",
						"enum": [
							"Debug",
							"Release"
						]
					},
					"hostConfiguration": {
						"type": "string",
						"enum": [
							"Debug",
							"Release"
						]
					},
					"arch": {
						"type": "string"
					},
					"runtimeFlavor": {
						"type": "string",
						"enum": [
							"CoreCLR",
							"Mono"
						]
					},
					"args": {
						"description": "Additional build arguments",
						"type": "array",
						"items": {
							"type": "string"
						},
						"default": []
					}
				},
				"when": "shellExecutionSupported"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile && npm run publish-server",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"lint-fix": "eslint src --ext ts --fix",
		"test": "node ./out/test/runTest.js",
		"publish-server": "dotnet publish ./src/server/AssistantServer.csproj -o out/server",
		"watch-server": "dotnet watch --no-hot-reload --project ./src/server/AssistantServer.csproj publish -o out/server"
	},
	"dependencies": {
		"glob": "^7.2.0",
		"jsonc-parser": "^3.2.0",
		"vscode-jsonrpc": "^8.0.2"
	},
	"devDependencies": {
		"@types/glob": "^7.2.0",
		"@types/mocha": "^9.0.0",
		"@types/node": "14.x",
		"@types/vscode": "^1.63.0",
		"@typescript-eslint/eslint-plugin": "^5.9.1",
		"@typescript-eslint/parser": "^5.9.1",
		"@vscode/test-electron": "^2.0.3",
		"eslint": "^8.6.0",
		"mocha": "^9.1.3",
		"typescript": "^4.5.4",
		"vsce": "^2.11.0"
	}
}